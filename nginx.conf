# ============================================
# CONFIGURAÇÃO GERADA AUTOMATICAMENTE
# ============================================
# O Nixpacks gera algo similar a isto:# ============================================
# ATENÇÃO: Este arquivo é apenas DOCUMENTAÇÃO!
# ============================================
# 
# O EasyPanel com Nixpacks gera o nginx.conf automaticamente
# baseado no nixpacks.toml. Este arquivo serve apenas como
# referência de como o nginx está configurado em produção.
#
# Para modificar configurações, use:
# - nixpacks.toml (configurações de build)
# - Variáveis de ambiente no EasyPanel
#
# NÃO EDITE este arquivo esperando mudanças em produção!

server {
    listen 80;
    listen [::]:80;
    server_name ialum.com.br www.ialum.com.br;
    
    # Redirect HTTP para HTTPS (quando tiver SSL)
    # return 301 https://$server_name$request_uri;
    
    # Raiz do projeto
    root /var/www/ialum_vs1;
    index index.html;
    
    # Logs
    access_log /var/log/nginx/ialum_access.log;
    error_log /var/log/nginx/ialum_error.log;
    
    # Página inicial e páginas públicas
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Arquivos estáticos públicos com cache
    location /public/ {
        alias /var/www/ialum_vs1/public/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Otimizações para tipos de arquivo
        location ~* \.(css|js)$ {
            expires 7d;
            add_header Cache-Control "public, must-revalidate";
        }
        
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 90d;
            add_header Cache-Control "public, immutable";
        }
        
        location ~* \.(woff|woff2|ttf|otf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin *;
        }
    }
    
    # Aplicação SPA (área privada)
    location /app {
        try_files $uri /app.html;
        
        # Headers de segurança
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # API/Webhooks (futura integração com N8N)
    location /api/ {
        # Quando N8N estiver rodando
        # proxy_pass http://localhost:5678/webhook/;
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection 'upgrade';
        # proxy_set_header Host $host;
        # proxy_cache_bypass $http_upgrade;
        
        # Por enquanto, retorna 503
        return 503;
    }
    
    # Segurança - bloquear acesso a arquivos sensíveis
    location ~ /\.(git|env|DS_Store|gitignore) {
        deny all;
    }
    
    location ~ /\.(md|json|lock)$ {
        deny all;
    }
    
    # Bloquear acesso direto a templates
    location ~ /app/templates/ {
        deny all;
    }
    
    # Compressão Gzip
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/json application/xml+rss;
    
    # Limite de upload (para futuro banco de imagens)
    client_max_body_size 10M;
}

# Configuração HTTPS (descomentar quando tiver certificado SSL)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name ialum.com.br www.ialum.com.br;
#     
#     ssl_certificate /etc/letsencrypt/live/ialum.com.br/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/ialum.com.br/privkey.pem;
#     
#     # Configurações SSL modernas
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
#     ssl_prefer_server_ciphers off;
#     
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
#     
#     # Resto da configuração igual ao server HTTP acima
# }